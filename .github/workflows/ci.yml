# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

#name of the workflow (optional): Describes what the workflow is doing.
name: Java CI with Gradle 

#These are events that should trigger the following workflow.
#Github Docs: Events that trigger workflows --> https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

#This is the part that gets executed whenever these events happen.
#actions kullanmak istediğimizde --> uses:
#command line command kullanmak istediğimizde --> run:
jobs:
  build-java:

    runs-on: ubuntu-latest
    
    steps:
    #Whenever we want to build application or run tests we need to check out the repository or the code first.
    #Türkçe anlatım: actions/checkout@v2 satırı, GitHub Actions iş akışlarında sıklıkla kullanılan bir adımdır ve temel olarak bir deponun içeriğini iş akışının çalıştırıldığı ortamına kopyalama işlemini gerçekleştirir. Bu işlem, iş akışının üzerinde çalışacağı kod tabanına erişmesini sağlar.
    - uses: actions/checkout@v2

    #Prepares your environment with Java: I want to use environment with Java.
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

      #Calling gradle build.
    - name: Build with Gradle
      run: ./gradlew build

    - name: Build and Push Docker Image
      uses: mr-smithers-excellent/docker-build-push@v4
      with:
        image: eaydinkurubacak/java-gradle-app
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
         
